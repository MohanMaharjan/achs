'use client'
import React, { useState, useEffect, useRef } from 'react'
import Link from 'next/link'
import { motion, AnimatePresence } from "framer-motion";
import Image from 'next/image';
import { FaChevronDown, FaChevronUp, FaTimes, FaBars } from "react-icons/fa";
import {BellDot} from 'lucide-react'

const Navbar = () => {
  const [isMegaMenuOpen, setIsMegaMenuOpen] = useState(null);
  const [isMobileMenuOpen, setIsMobileMenuOpen] = useState(false);
  const scrollContainerRef = useRef(null);

  const navItems = [
    {
      name: "ABOUT US",
      href:'/about'
    },
    { 
      name: "PROGRAMS", 
      href: "#",
      submenu: [
        {
          title: "Bachelor of Science in Computer Science and Information Technology",
          image: (
            <div className="w-full h-48 relative">
              <Image 
                src="/csit.jpg" 
                layout="fill"
                objectFit="cover"
                alt="BSCIT" 
                className="rounded-md"
              />
            </div>
          ),
          items: [
            { name: "Admission", href: "/cloud/" },
            { name: "Syllabus", href: "/artificial-intelligence/" },
            { name: "Faculties", href: "/business-analytics/" },
            { name: "Fee Structure", href: "/cloud/cost-management-and-governance/" },
            { name: "Placement", href: "/cloud/enterprise-applications/" },
            { name: "Scholarship", href: "/cloud/enterprise-applications/" },
            { name: "Alumni", href: "/cloud/enterprise-applications/" },
            { name: "Events", href: "/cloud/enterprise-applications/" },
            { name: "Guest Lectures", href: "/cloud/enterprise-applications/" },
          ],
        },
        {
          title: "Bachelor of Computer Application",
          image: (
            <div className="w-full h-48 relative">
              <Image 
                src="/bca.jpg" 
                layout="fill"
                objectFit="cover"
                alt="BCA" 
                className="rounded-md"
              />
            </div>
          ),
          items: [
            { name: "Admission", href: "/cloud/" },
            { name: "Syllabus", href: "/artificial-intelligence/" },
            { name: "Faculties", href: "/business-analytics/" },
            { name: "Fee Structure", href: "/cloud/cost-management-and-governance/" },
            { name: "Placement", href: "/cloud/enterprise-applications/" },
            { name: "Scholarship", href: "/cloud/enterprise-applications/" },
            { name: "Alumni", href: "/cloud/enterprise-applications/" },
            { name: "Events", href: "/cloud/enterprise-applications/" },
            { name: "Guest Lectures", href: "/cloud/enterprise-applications/" },
          ],
        },
        {
          title: "Bachelor of Business Management",
          image: (
            <div className="w-full h-48 relative">
              <Image 
                src="/bbm.jpg" 
                layout="fill"
                objectFit="cover"
                alt="BBM" 
                className="rounded-md"
              />
            </div>
          ),
          items: [
            { name: "Admission", href: "/cloud/" },
            { name: "Syllabus", href: "/artificial-intelligence/" },
            { name: "Faculties", href: "/business-analytics/" },
            { name: "Fee Structure", href: "/cloud/cost-management-and-governance/" },
            { name: "Placement", href: "/cloud/enterprise-applications/" },
            { name: "Scholarship", href: "/cloud/enterprise-applications/" },
            { name: "Alumni", href: "/cloud/enterprise-applications/" },
            { name: "Events", href: "/cloud/enterprise-applications/" },
            { name: "Guest Lectures", href: "/cloud/enterprise-applications/" },
          ],
        },
      ], 
    },
    { name: "LIFE @ ACHS", href: "#" },
    { name: "NOTICES", href: "#", icons: <BellDot className="inline-block mr-1 text-rose-600" size={20} /> },
  ];


   // Mega menu animation variants
  const megaMenuVariants = {
    hidden: { opacity: 0, y: -20 },
    visible: {
      opacity: 1,
      y: 0,
      transition: { duration: 0.3, ease: "easeInOut" },
    },
    exit: {
      opacity: 0,
      y: -20,
      transition: { duration: 0.3, ease: "easeInOut" },
    },
  };

  // Mobile menu animation variants
  const mobileMenuVariants = {
    hidden: { opacity: 0, x: "100%" },
    visible: {
      opacity: 1,
      x: 0,
      transition: { duration: 0.3, ease: "easeInOut" },
    },
    exit: {
      opacity: 0,
      x: "100%",
      transition: { duration: 0.3, ease: "easeInOut" },
    },
  };

  // Scroll handling
  const scrollUp = () => {
    if (scrollContainerRef.current) {
      scrollContainerRef.current.scrollBy({ top: -100, behavior: "smooth" });
    }
  };

  const scrollDown = () => {
    if (scrollContainerRef.current) {
      scrollContainerRef.current.scrollBy({ top: 100, behavior: "smooth" });
    }
  };


  return (
    <>  
      <motion.nav
        className="fixed top-0 left-0 w-full bg-white shadow-lg !z-50 "
        initial={{ y: -100 }}
        animate={{ y: 0 }}
        transition={{ duration: 0.5 }}
      >
        <div className="container mx-auto px-4 py-4 flex items-center justify-between z-50">
          {/* Logo */}
          <Link href="/" className="text-2xl font-bold text-white ">
            <Image src="/achs.png" width={180} height={80} alt="Logo" className="w-32 object-contain" />
          </Link>

          {/* Hamburger Menu for Mobile */}
          <button
            className="md:hidden text-rose-600 focus:outline-none"
            onClick={() => setIsMobileMenuOpen(!isMobileMenuOpen)}
          >
            {isMobileMenuOpen ? <FaTimes size={24} /> : <FaBars size={24} />}
          </button>

          <div className="flex items-center justify-end gap-4 md:gap-6 w-full ">
            {/* Desktop Navigation Menu */}
            <ul className="hidden md:flex items-center gap-6">
              {navItems.map((item, index) => (
                <li key={index} className="relative group">
                  <div
                    className="flex items-center cursor-pointer"
                    onClick={() =>
                      setIsMegaMenuOpen(isMegaMenuOpen === index ? null : index)
                    }
                  >
                    <Link
                      href={item.href || "#"}
                      className="text-gray-700 hover:text-rose-600 transition-colors duration-200 text-lg font-semibold flex items-center"
                    >
                      {item.icons ? (
                        <span className="flex items-center gap-1">
                          {item.icons && item.icons} 
                          {item.name}
                        </span>
                      ) : (   
                        item.name
                      )}
                    </Link>
                    {item.submenu && (
                      <span className="ml-1 text-gray-700 group-hover:text-rose-600">
                        {isMegaMenuOpen === index ? (
                          <FaChevronUp size={12} />
                        ) : (
                          <FaChevronDown size={12} />
                        )}
                      </span>
                    )}
                  </div>

                  {/* Desktop Mega Menu */}
                  {item.submenu && (
                    <AnimatePresence>
                      {isMegaMenuOpen === index && (
                        <motion.div
                          variants={megaMenuVariants}
                          initial="hidden"
                          animate="visible"
                          exit="exit"
                          className="fixed left-0 top-[80px] w-full bg-white shadow-lg z-40"
                        >
                          <div className="relative bg-gray-800 ">
                            <div className="bg-rose-600 p-12 py-2 flex justify-between items-center ">
                              <h2 className="text-lg font-semibold text-white">
                                {item.name}
                              </h2>
                              <button
                                onClick={() => setIsMegaMenuOpen(null)}
                                className="text-white hover:text-white"
                              >
                                <FaTimes size={20} />
                              </button>
                            </div>
                            <button
                              onClick={scrollUp}
                              className="absolute top-14 left-1/2 -translate-x-1/2 z-50 bg-white p-2 rounded-full shadow-md hover:bg-gray-100"
                            >
                              <FaChevronUp size={16} className="text-gray-600" />
                            </button>
                            <div
                              ref={scrollContainerRef}
                              className="container mx-auto px-4 py-12 max-h-[70vh] overflow-y-auto "
                            >
                              <div className="grid grid-cols-1 md:grid-cols-3 gap-8 py-4">
                                {item.submenu.map((category, catIndex) => (
                                  <div key={catIndex} className="space-y-4">
                                    <div className="h-48 overflow-hidden rounded-md">
                                      {category.image}
                                    </div>
                                    <h3 className="text-lg font-semibold text-white">
                                      {category.title}
                                    </h3>
                                    <ul className="space-y-2">
                                      {category.items.map((subItem, subIndex) => (
                                        <li key={subIndex}>
                                          <Link
                                            href={subItem.href}
                                            className="text-gray-200 hover:text-rose-600 transition-colors duration-200"
                                          >
                                            {subItem.name}
                                          </Link>
                                        </li>
                                      ))}
                                    </ul>
                                  </div>
                                ))}
                              </div>
                            </div>
                            <button
                              onClick={scrollDown}
                              className="absolute bottom-2 left-1/2 -translate-x-1/2 z-50 bg-white p-2 rounded-full shadow-md hover:bg-gray-100"
                            >
                              <FaChevronDown size={16} className="text-gray-600" />
                            </button>
                          </div>
                        </motion.div>
                      )}
                    </AnimatePresence>
                  )}
                </li>
              ))}
            </ul>

            <button className='bg-rose-600 text-white hover:bg-rose-500 py-2 px-4 rounded cursor-pointer hidden md:flex'>Apply Now</button>
          </div>
        </div>

        {/* Mobile Menu */}
        <AnimatePresence>
          {isMobileMenuOpen && (
            <motion.div
              variants={mobileMenuVariants}
              initial="hidden"
              animate="visible"
              exit="exit"
              className="fixed top-[80px] left-0 w-full h-[calc(100vh-64px)] bg-[#c91313] z-40 md:hidden overflow-y-auto"
            >
              <ul className="flex flex-col items-start gap-4 p-4">
                {navItems.map((item, index) => (
                  <li key={index} className="w-full">
                    <div
                      className="flex items-center justify-between cursor-pointer text-white hover:text-rose-600 transition-colors duration-200"
                      onClick={() =>
                        setIsMegaMenuOpen(isMegaMenuOpen === index ? null : index)
                      }
                    >
                      <Link href={item.href || "#"}>{item.name}</Link>
                      {item.submenu && (
                        <span>
                          {isMegaMenuOpen === index ? (
                            <FaChevronUp size={12} />
                          ) : (
                            <FaChevronDown size={12} />
                          )}
                        </span>
                      )}
                    </div>

                    {/* Mobile Submenu */}
                    {item.submenu && isMegaMenuOpen === index && (
                      <div className="mt-2 pl-4 space-y-2">
                        {item.submenu.map((category, catIndex) => (
                          <div key={catIndex} className="space-y-2">
                            <h3 className="text-lg font-semibold text-white">
                              {category.title}
                            </h3>
                            <ul className="space-y-1">
                              {category.items.map((subItem, subIndex) => (
                                <li key={subIndex}>
                                  <Link
                                    href={subItem.href}
                                    className="text-gray-200 hover:text-rose-600 transition-colors duration-200"
                                    onClick={() => setIsMobileMenuOpen(false)}
                                  >
                                    {subItem.name}
                                  </Link>
                                </li>
                              ))}
                            </ul>
                          </div>
                        ))}
                      </div>
                    )}
                  </li>
                ))}
              </ul>
            </motion.div>
          )}
        </AnimatePresence>
      </motion.nav>
    </>
  )
}

export default Navbar